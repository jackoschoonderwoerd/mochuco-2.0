import { Injectable } from '@angular/core';
import { Auth } from '@angular/fire/auth';
import {
    Storage,
    ref,
    deleteObject,
    uploadBytes,
    uploadString,
    uploadBytesResumable,
    percentage,
    getDownloadURL,
    getMetadata,
    provideStorage,
    getStorage,
    getBytes,
} from '@angular/fire/storage';
import {
    Firestore,
    addDoc,
    collection,
    collectionData,
    collectionGroup,
    doc,
    docData,
    deleteDoc,
    updateDoc,
    DocumentReference,
    setDoc,
    orderBy,
    query
} from '@angular/fire/firestore';

interface newVenue {

}

@Injectable({
    providedIn: 'root'
})


export class NewVenueService {

    constructor(
        private firestore: Firestore,
        private afAuth: Auth,
        private storage: Storage) { }

    // setNewVenue() {
    //     console.log('setNewVenue()')
    //     const newVenue: any = {

    //         venues: [
    //             {
    //                 venueId: 'venue name boes',
    //                 // items: [
    //                 // {
    //                 //     imageId: '?',
    //                 //     imageUrl: 'imageUrl',
    //                 //     languages: [
    //                 //         {
    //                 //             name: 'dutch',
    //                 //             description: 'd dutch',
    //                 //             audioUrl: 'audioUrl'
    //                 //         }
    //                 //     ]
    //                 // }
    //                 // ]
    //             },
    //         ]
    //     }
    //     const owner = this.afAuth.currentUser.email
    //     const venueRef = doc(this.firestore, `newVenues/${owner}/venues/${newVenue}`)
    //     return setDoc(venueRef, newVenue)
    //         .then((res) => console.log(res))
    //         .catch(err => console.log(err));
    // }
}
